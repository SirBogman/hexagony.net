$buttonInnerWidth: 1.5rem;
$buttonOuterWidth: 2.75rem;
$narrowButtonOuterWidth: 2.35rem;
// $sliderButtonWidth is the width of the slider in button widths.
$sliderButtonWidth: 3;
$buttonCount: 17;
$narrowWidthPadding: 0.5;
$transitionTime: 0.2s;

body header {
    background: var(--color);
    position: sticky;
    top: 0;
    z-index: 1;
}

header nav {
    margin: auto;
    max-width: 1280px;
    display: grid;
    grid-template-columns: auto 1fr auto 1fr auto 1fr auto;
    grid-template-rows: auto;
    grid-template-areas:
        "navigation spacer1 viewControls spacer2 editControls spacer3 playControls";
}

// Use two-row toolbar for small widths.
// window.innerWidth values:
// Portrait:
// iPhone 8: 375
// iPhone 12: 390
// iPhone 12 Pro: 390
// iPhone 12 Pro Max: 428
// Landscape:
// iPhone 8: 667
// iPhone 12: 750
// iPhone 12 Pro: 750
// iPhone 12 Pro Max: 832
$two-row-width: ($buttonCount + $sliderButtonWidth + $narrowWidthPadding) * $narrowButtonOuterWidth;
@debug 'Two Row Width' $two-row-width;

@media (max-width: $two-row-width) {
    header nav {
        grid-template-columns: auto 1fr auto;
        grid-template-rows: auto auto;
        grid-template-areas:
        "navigation spacer1 editControls"
        "viewControls spacer1 playControls";
    }

    .largeToolbarOnly {
        display: none;
    }
}

nav > #navigation {
    grid-area: navigation;
}

nav > #viewControls {
    grid-area: viewControls;
}

nav > #editControls {
    grid-area: editControls;
    justify-self: right;
}

nav > #playControls {
    grid-area: playControls;
    justify-self: right;
}

svg.buttonSvg {
    height: $buttonInnerWidth;
    width: $buttonInnerWidth;
}

header a,
header > nav button,
#speedSliderContainer {
    height: $buttonOuterWidth;
    width: $buttonOuterWidth;
    display: inline-block;
    align-items: center;
    display: flex;
    justify-content: center;
    color: var(--background);
    fill: var(--background);
}

header a,
header > nav button {
    transition: background $transitionTime ease-out, color $transitionTime ease-out;
}

header > nav .group {
    display: flex;
}

header > nav button {
    background: var(--color);
    color: var(--background);
    border: none;
    padding: 0;
}

header a.active,
header > nav button[aria-checked=true] {
    background: var(--background);
    color: var(--color);
}

@media (hover: hover) {
    header a:hover,
    header > nav button:enabled:hover {
        background: var(--hover);
    }

    header a.active:hover,
    header > nav button[aria-checked=true]:enabled:hover {
        background: var(--hover-active);
    }
}

header > nav button:disabled {
    color: var(--disabled-color);
}

#speedSliderContainer.focused {
    border: 1px dotted var(--background);
}

input[type=range] {
    -webkit-appearance: none;
    opacity: 0.8;
    transition: opacity $transitionTime ease-out;
    height: 1px;
    // don't put a weird outline on it when using it in Chrome.
    outline: none;
}

input[type=range]:hover,
input[type=range]:focus {
    opacity: 1.0;
}

input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    background: var(--background);
    width: 10px;
    height: 1.5rem;
}

input[type=range]::-moz-range-thumb {
    width: 10px;
    height: 1.5rem;
    background: var(--background);
    border-radius: 0;
    border: none;
}

#speedSliderContainer {
    width: $buttonOuterWidth * $sliderButtonWidth;
}

#speedSlider {
    width: $sliderButtonWidth * $buttonOuterWidth - ($buttonOuterWidth - $buttonInnerWidth);
}

@media (max-width: 950px) {
    // Reduce the outer width of buttons a bit, before changing to the one column layout.
    $buttonOuterWidth: $narrowButtonOuterWidth;

    header a,
    header > nav button {
        width: $buttonOuterWidth;
    }

    #speedSliderContainer {
        width: $buttonOuterWidth * $sliderButtonWidth;
    }

    #speedSlider {
        width: $sliderButtonWidth * $buttonOuterWidth - ($buttonOuterWidth - $buttonInnerWidth);
    }
}
